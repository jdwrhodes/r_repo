r --version
R --version
R --version
source('C:/Users/josrh/Desktop/Stuff/ClassRepo/Module-15/r_repo/r_analysis/01_Demo/plots.R')
?sample_n()
setwd("C:/Users/josrh/Desktop/Stuff/ClassRepo/Module-15/r_repo/r_analysis")
library(tidyverse)
library(ggplot2)
shapiro.test(mtcars$wt)
used_cars <- read_csv('../data/used_car_data.csv')
used_cars <- read_csv('/data/used_car_data.csv')
used_cars <- read_csv('./data/used_car_data.csv')
used_cars <- read.csv('./data/used_car_data.csv')
used_cars <- read.csv('/data/used_car_data.csv')
used_cars <- read.csv('data/used_car_data.csv')
used_cars <- read.csv('data/used_car_data.csv', check.names = F, stringsAsFactors = F)
pwd()
getwd()
used_cars <- read.csv('./01_Demo/data/used_car_data.csv', check.names = F, stringsAsFactors = F)
View(used_cars)
?log10()
used_cars_plt <- ggplot(used_cars, aes(x=log10(Miles_Driven))) # creating ggplot object, using the log10() on the Miles_Driven column. We did this because the distribuion of miles is right skewed. Meaning some vehicles have very high mileage. the log10() transformation makes the visualization appear more normal
used_cars_plt + geom_density() # visualizing the plot
sample_table <- used_cars %>% sample_n(50) # generating a random sample of 50 from the dataset
source('C:/Users/josrh/Desktop/Stuff/ClassRepo/Module-15/r_repo/r_analysis/01_Demo/stats_tests.R')
used_cars_plt <- ggplot(used_cars, aes(x=Miles_Driven)) # creating ggplot object, using the log10() on the Miles_Driven column. We did this because the distribuion of miles is right skewed. Meaning some vehicles have very high mileage. the log10() transformation makes the visualization appear more normal
used_cars_plt + geom_density() # visualizing the plot
log10(
used_cars_plt + geom_density() # visualizing the plot
used_cars_plt <- ggplot(used_cars, aes(x=log10(Miles_Driven))) # creating ggplot object, using the log10() on the Miles_Driven column. We did this because the distribuion of miles is right skewed. Meaning some vehicles have very high mileage. the log10() transformation makes the visualization appear more normal
used_cars_plt + geom_density() # visualizing the plot
source('C:/Users/josrh/Desktop/Stuff/ClassRepo/Module-15/r_repo/r_analysis/01_Demo/stats_tests.R')
used_cars_plt + geom_density() # visualizing the plot
used_car_sample_table <- used_cars %>% sample_n(50) # generating a random sample of 50 from the dataset
used_car_sample_plt <- ggplot(used_car_sample_table, aes(x=log10(Mileage_Driven))) # same as above
used_car_sample_plt + geom_density()
View(used_car_sample_table)
used_car_sample_plt <- ggplot(used_car_sample_table, aes(x=log10(Miles_Driven))) # same as above
used_car_sample_plt + geom_density()
?t.test()
t.test(log10(used_car_sample_table$Miles_Driven), mu=mean(log10(used_car_sample_table$Miles_Driven)))
t.test(log10(used_car_sample_table$Miles_Driven), mu=mean(log10(used_cars$Miles_Driven)))
# now produce 2 sample sets for the two-sample t-test
car_sample <- used_cars %>% sample_n(50)
car_sample2 <- used_cars %>% sample_n(50)
# now run the 2 sample t-test
t.test(log10(car_sample$Miles_Driven), log10(car_sample2$Miles_Driven))
?t.test()
mpg <- read.csv('./01_Demo/data/mpg_modified.csv', check.names = F, stringsAsFactors = F) # importing used cars dataset
View(mpg)
mpg_1999 <- mpg %>% filter(year==1999) # first sample where year is 1999
mpg_2008 <- mpg %>% filter(year===2008) # second sample where year is 2008
mpg_2008 <- mpg %>% filter(year==2008) # second sample where year is 2008
View(mpg_1999)
View(mpg_1999)
View(mpg_2008)
View(mpg_2008)
# now testing to see if there is a difference between the two samples
t.test(mpg_1999, mpg_2008, paired = T)
# now testing to see if there is a difference between the two samples
t.test(mpg_1999$hwy, mpg_2008$hwy, paired = T)
mtcars_filt <- mtcars[,c('hp', 'cyl')] # we are filtering columns from the mtcars dataframe
mtcars_filt$cyl <- factor(mtcars_filt$cyl) # now using the factor() function to convert the numeric column to a categorical one
View(mtcars_filt)
mtcars <- mtcars
View(mtcars)
aov(hp ~ cyl, data = mtcars_filt) # comparing the means across the different cylinder counts, 4,6,8
# to get the p-values, wrap the above in a summary() function
summary(aov(hp~cyl, data = mtcars_filt))
library(tidyverse)
library(ggplot2)
mtcars <-  mtcars
View(mtcars)
help(mtcars)
# testing correlation between hp and qmile times
plt <- ggplot(mtcars, aes(x=hp, y=qsec))
plt + geom_point()
# here we are generating the correlation coeffecient, r
cor(mtcars$hp, mtcars$qsec)
# another example
used_cars <- read.csv('/01_Demo/data/used_car_data.csv',stringsAsFactors = F) #read in dataset
# another example
used_cars <- read.csv('./01_Demo/data/used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
used_plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
used_plt + geom_point()
# now the correlation calc
cor(used_cars$Miles_Driven, used_cars$Selling_Price)
# to compare multiple different correlations at once, convert to matrix, then create correlation matrix
used_matrix <- as.matrix(used_cars[c('Selling_Price', "Present_Price", 'Miles_Driven')])
cor(used_matrix)
View(used_cars)
?lm()
# creating a linear model to try and predict qsec times given a hp value
lm(qsec ~ hp, mtcars)
# to determine the p-value and r^2 value, thus getting the linear model
summary(lm(qsec ~ hp, mtcars))
# now to create the actual lienar model
model <- lm(qsec ~ hp, mtcars)
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['Intercept'] # this last is retreiving the y-axis values from the linear model
# and now plotting the actual line
lm_plt <- ggplot(mtcars,aes(x=hp, y=qsec)) # creating the ggplot object
plt + geom_point() + geom_line(aes(y=yvals), color = 'red')
lm_plt + geom_point() + geom_line(aes(y=yvals), color = 'red')
# and now plotting the actual line
lm_plt <- ggplot(mtcars,aes(x=hp, y=qsec)) # creating the ggplot object
lm_plt + geom_point() + geom_line(aes(y=yvals), color = 'red')
View(lm_plt)
View(lm_plt)
source('C:/Users/josrh/Desktop/Stuff/ClassRepo/Module-15/r_repo/r_analysis/01_Demo/correlation.R')
# and now plotting the actual line
lm_plt <- ggplot(mtcars,aes(x=hp, y=qsec)) # creating the ggplot object
lm_plt + geom_point() + geom_line(aes(y=yvals), color = 'red')
# and now plotting the actual line
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)'] # this last is retrieving the y-axis values from the linear model
yvals <- model$coefficients['hp']*mtcars$hp + model$coefficients['(Intercept)'] # this last is retrieving the y-axis values from the linear model
# and now plotting the actual line
lm_plt <- ggplot(mtcars,aes(x=hp, y=qsec)) # creating the ggplot object
lm_plt + geom_point() + geom_line(aes(y=yvals), color = 'red')
# now we're doing multiple linear regression analysis by adding additional independent variables
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
?chisq.test()
View(mtcars)
View(used_cars)
mpg <-  read.csv('/01_Demo/data/mpg_modified.csv', check.names = F, stringsAsFactors = F)
mpg <-  read.csv('./01_Demo/data/mpg_modified.csv', check.names = F, stringsAsFactors = F)
table(mpg$class, mpg$year) #generating the contingency table
tbl <- table(mpg$class, mpg$year) #generating the contingency table
chisq.test(tbl) # compares categorical distributions using the chi=squared test
